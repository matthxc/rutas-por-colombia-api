{
  "swagger": "2.0",
  "info": {
    "description": "Rutas Por Colombia Express Server. API Rest utilizada para consumir todos los servicios de la aplicaci√≥n web y el administrador.",
    "version": "0.0.5",
    "title": "Rutas por Colombia API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [{
      "name": "server",
      "description": "General server actions"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/ping": {
      "get": {
        "tags": [
          "server"
        ],
        "summary": "Check the status of the API",
        "description": "Check the status of the API",
        "operationId": "pingAPI",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Server is online",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Created user object",
          "required": true,
          "schema": {
            "$ref": "#/definitions/User"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer",
                      "description": "The user ID"
                    },
                    "email": {
                      "type": "string",
                      "description": "The user email"
                    }
                  }
                },
                "token": {
                  "type": "string",
                  "description": "User access JWT token"
                }
              }
            }
          },
          "400": {
            "description": "Missing email or password fields"
          }
        }
      }
    },
    "/user/admin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create admin user",
        "description": "This can only be done by the admin logged in user.",
        "operationId": "createAdminUser",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "Authorization",
            "in": "header",
            "description": "JWT Access token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer",
                      "description": "The user ID"
                    },
                    "email": {
                      "type": "string",
                      "description": "The user email"
                    }
                  }
                },
                "token": {
                  "type": "string",
                  "description": "User access JWT token"
                }
              }
            }
          },
          "400": {
            "description": "Missing email or password fields"
          },
          "401": {
            "description": "Access Token missing from header or Not authorized to perform this action. Only admin user perform this action."
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "User login",
          "required": true,
          "schema": {
            "$ref": "#/definitions/User"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer",
                      "description": "The user ID"
                    },
                    "email": {
                      "type": "string",
                      "description": "The user email"
                    }
                  }
                },
                "token": {
                  "type": "string",
                  "description": "User access JWT token"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/login/admin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs admin user into the system",
        "description": "",
        "operationId": "loginUserAdmin",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "User Admin login",
          "required": true,
          "schema": {
            "$ref": "#/definitions/User"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer",
                      "description": "The user ID"
                    },
                    "email": {
                      "type": "string",
                      "description": "The user email"
                    }
                  }
                },
                "token": {
                  "type": "string",
                  "description": "User access JWT token"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized to perform this action, only admin user have access"
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "Authorization",
          "in": "header",
          "description": "JWT Access token",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "integer",
                  "description": "The user ID"
                },
                "email": {
                  "type": "string",
                  "description": "The user email"
                }
              }
            }
          },
          "401": {
            "description": "Access Token missing from header or Not authorized to perform this action"
          }
        }
      }
    },
    "/user/me/token": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "Authorization",
          "in": "header",
          "description": "JWT Access token",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "401": {
            "description": "Access Token missing from header or Not authorized to perform this action"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}